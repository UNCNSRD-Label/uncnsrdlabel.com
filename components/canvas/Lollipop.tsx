/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: indicuum (https://sketchfab.com/indicuum)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/lollipop-1231d4a31e6c4e64845ca1fae0cf0450
title: Lollipop
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh;
    Object_6: THREE.Mesh;
  };
  materials: {
    ["Material.001"]: THREE.MeshStandardMaterial;
    ["Material.002"]: THREE.MeshStandardMaterial;
  };
};

// eslint-disable-next-line react/display-name
export const Model = React.forwardRef(
  (props: JSX.IntrinsicElements["group"], ref) => {
    const { nodes, materials } = useGLTF(
      "/models/lollipop/scene.gltf"
    ) as GLTFResult;

    return (
      <group {...props} dispose={null} ref={ref}>
        <group position={[0, 0.09, -0.6]} rotation={[-1.27, 0, 0]} scale={0.43}>
          <group rotation={[Math.PI / 2, 0, 0]}>
            <group position={[0, 1.52, 0]} scale={[0.13, 2.61, 0.13]}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_4.geometry}
                material={materials["Material.001"]}
              />
            </group>
            <group position={[0, 4.2, 0]}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_6.geometry}
                material={materials["Material.002"]}
              />
            </group>
          </group>
        </group>
      </group>
    );
  }
);

export default Model;

useGLTF.preload("/models/lollipop/scene.gltf");
