#import "#/lib/graphql/fragments/ImageBasicInformation.graphql"
#import "#/lib/graphql/fragments/QueryRootInformation.graphql"
#import "#/lib/graphql/fragments/ProductBasicInformation.graphql"
query Product($slug: String!) {
  ...QueryRootInformation
  product(handle: $slug) {
    availableForSale
    descriptionHtml
    handle
    id
    productType
    publishedAt
    title
    vendor
    images(first: 32) {
      nodes {
        ... on Image {
          ... ImageBasicInformation
        }
      }
    }
    media(first: 32) {
      nodes {
        ... on Model3d {
          alt
          mediaContentType
          previewImage {
            ... on Image {
              ... ImageBasicInformation
            }
          }
          sources {
            filesize
            format
            mimeType
            url
          }
        }
      }
    }
    options {
      id
      name
      values
    }
    priceRange {
      maxVariantPrice {
        amount
        currencyCode
      }
      minVariantPrice {
        amount
        currencyCode
      }
    }
    productType
    seo {
      description
      title
    }
    variants(first: 32) {
      pageInfo {
        hasNextPage
        hasPreviousPage
      }
      nodes {
        availableForSale
        barcode
        compareAtPrice {
          amount
          currencyCode
        }
        currentlyNotInStock
        id
        metafields(
          identifiers: [
            { namespace: "custom", key: "additional_media" }
            { namespace: "custom", key: "color" }
            { namespace: "custom", key: "complementary_products" }
            { namespace: "custom", key: "composition" }
            { namespace: "custom", key: "material_image" }
            { namespace: "shopify--discovery--product_recommendation", key: "related_products" }
          ]
        ) {
          description
          key
          namespace
          reference {
            ... on MetafieldReference {
              ... on Page {
                body
                handle
                onlineStoreUrl
                title
              }
              ... on MediaImage {
                mediaContentType
                previewImage {
                  ... on Image {
                    ... ImageBasicInformation
                  }
                }
              }
            }
          }
          references(first: 32) {
            nodes {
              ... on MetafieldReference {
                ... on MediaImage {
                  mediaContentType
                  previewImage {
                    ... on Image {
                      ... ImageBasicInformation
                    }
                  }
                }
                ... on Product {
                  ...ProductBasicInformation
                }
                # ... on ProductVariant {
                #   ...ProductVariantBasicInformation
                # }
                ... on Collection {
                  title
                  products {
                    nodes {
                      ...ProductBasicInformation
                    }
                  }
                }
              }
            }
          }
          type
          value
        }
        price {
          amount
          currencyCode
        }
        quantityAvailable
        requiresShipping
        selectedOptions {
          name
          value
        }
        sku
        title
      }
    }
    metafields(
      identifiers: [
        {
          namespace: "shopify--discovery--product_recommendation"
          key: "complementary_products"
        }
        {
          namespace: "shopify--discovery--product_recommendation"
          key: "related_products"
        }
        { namespace: "custom", key: "composition" }
        { namespace: "custom", key: "returns" }
        { namespace: "custom", key: "shipping" }
        { namespace: "custom", key: "sizing" }
        { namespace: "descriptors", key: "care_guide" }
      ]
    ) {
      namespace
      key
      type
      value
      description
      id
      reference {
        ... on MetafieldReference {
          ... on Page {
            body
            handle
            onlineStoreUrl
            title
          }
        }
      }
      references(first: 32) {
        nodes {
          ... on MetafieldReference {
            ... on Page {
              body
              handle
              onlineStoreUrl
              title
            }
          }
        }
      }
    }
  }
}
