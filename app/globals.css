@tailwind base;
@tailwind components;
@tailwind utilities;

@supports (font: -apple-system-body) and (-webkit-appearance: none) {
  img[loading="lazy"] {
    clip-path: inset(0.6px);
  }
}

@layer base {
  * {
    @apply focus-visible:outline-none focus-visible:ring focus-visible:ring-hotPink focus-visible:ring-offset-0;
    @apply border-black dark:border-white;
    text-underline-offset: theme(textUnderlineOffset.4);
  }

  /* Create scroll-timeline on the root */
  html {
    scroll-behavior: smooth;
    scroll-timeline: --page-scroll block;
  }

  a,
  button {
    &:has(> .icon:only-child),
    &.icon-container {
      @apply focus-visible:border-hotPink focus-visible:fill-hotPink focus-visible:stroke-hotPink focus-visible:text-hotPink focus-visible:ring-0;
    }
  }

  a {
    @apply focus-visible:stroke-hotPink focus-visible:text-hotPink focus-visible:ring-0;
  }

  input {
    --tw-ring-color: theme(ringColor.hotPink) !important;

    &:focus,
    &:hover {
      @apply !border-hotPink;
    }
  }
}

@layer components {
  .field {
    @apply relative grid items-center;
  }

  .btn {
    @apply grid place-items-center text-center uppercase tracking-widest transition-all ease-in-out;
    @apply focus-visible:outline-offset-0 focus-visible:ring-0;

    &[disabled] {
      @apply cursor-not-allowed decoration-2;

      &:not(.mutating) {
        @apply line-through decoration-error;
      }

      &.mutating {
        @apply relative !outline-hotPink [&_>_*]:text-black;

        span {
          @apply relative z-10;
        }

        &::before {
          @apply absolute inset-0 z-0 bg-gradient-to-r from-hotPink/50 via-hotPink/100 to-hotPink/50;
          content: "";
          background-size: 500%;
          animation: mutating 30s linear infinite;
        }
      }
    }

    &.btn-outline {
      @apply hover:!bg-hotPink/20 hover:!outline-hotPink focus-visible:!bg-hotPink/20 focus-visible:!outline-hotPink;
    }

    &:not(.btn-outline) {
      @apply hover:!text-hotPink focus-visible:!text-hotPink;
    }

    &.btn-bg {
      &.btn-outline {
        @apply hover:!bg-hotPink/20 focus-visible:!bg-hotPink/20;
      }

      &:not(.btn-outline) {
        @apply hover:!bg-hotPink hover:!text-black focus-visible:!bg-hotPink focus-visible:!text-black;
      }
    }
  }

  .btn-primary {
    @apply text-white outline outline-transparent;

    &[disabled] {
      @apply text-white/50;
    }

    &.btn-outline {
      @apply outline-white;

      &[disabled] {
        @apply outline-white/50;
      }
    }

    &.btn-bg {
      @apply bg-white text-black;

      &[disabled] {
        @apply bg-white/50;
      }
    }
  }

  .btn-secondary {
    @apply text-gray-300 outline outline-transparent;

    &[disabled] {
      @apply text-gray-300/50;
    }

    &.btn-outline {
      @apply outline-gray-300;

      &[disabled] {
        @apply outline-gray-300/50;
      }
    }

    &.btn-bg {
      @apply bg-gray-300 text-black;

      &[disabled] {
        @apply bg-gray-300/50;
      }
    }
  }

  .btn-rounded {
    @apply rounded-full p-3;
  }

  .btn-sm {
    @apply px-3 py-1 text-sm;
  }

  .btn-base {
    @apply px-6 py-2 text-base;
  }

  .btn-lg {
    @apply px-12 py-4 text-lg;
  }

  .pin {
    min-height: 100dvh;
    width: 100%;
    max-width: 100dvw;
    overflow-x: hidden;
    position: relative;
  }

  .pin-wrap-sticky {
  }

  .pin-wrap {
    height: 100dvh;
    display: grid;
    align-items: stretch;
    /* grid-template-columns: repeat(4, auto); */
    justify-items: center;
  }

  @keyframes mutating {
    0%,
    100% {
      background-position: 0% 0%;
    }
    50% {
      background-position: 500% 0%;
    }
  }

  @supports not (animation-timeline: view()) {
    .pin-wrap-sticky {
      overflow-x: auto;
    }
  }

  @supports (animation-timeline: view()) {
    @keyframes move {
      to {
        /* Move horizontally so that right edge is aligned against the viewport */
        transform: translateX(calc(-100% + 100dvw));
        left: 0px;
      }
    }

    .pin {
      /* Stretch it out, so that we create room for the horizontal scroll animation */
      height: 400dvh;
      overflow: visible; /* To make position sticky work â€¦ */

      view-timeline-name: --section-pin-tl;
      view-timeline-axis: block;
    }

    .pin-wrap-sticky {
      /* Stick to Top */
      height: 100dvh;
      width: 100dvw;
      overflow-x: hidden;
      position: sticky;
      top: 0;

      width: 100dvw;
      overflow-x: hidden;
    }

    .pin-wrap {
      height: 100dvh;
      width: 250vmax;

      /* Hook animation */
      will-change: transform;
      animation: linear move forwards;

      /* Link animation to view-timeline */
      animation-timeline: --section-pin-tl;
      animation-range: contain 0% contain 100%;
    }
  }
}

@layer utilities {
  .icon {
    @apply transition-all duration-300 ease-in-out hover:scale-110;
    gap: theme(gap[0.5]);
  }

  @keyframes move {
    100% {
      transform: translateX(calc(-100% + 100dvw));
      left: 0px;
    }
  }
}
